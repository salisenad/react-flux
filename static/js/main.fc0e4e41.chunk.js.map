{"version":3,"sources":["components/HomePage.js","components/AboutPage.js","components/common/Header.js","appDispatcher.js","actions/actionTypes.js","stores/courseStore.js","components/CourseList.js","api/apiUtils.js","api/courseApi.js","actions/courseActions.js","components/CoursesPage.js","components/NotFoundPage.js","components/common/TextInput.js","components/CourseForm.js","components/ManageCoursePage.js","components/App.js","index.js"],"names":["HomePage","className","to","AboutPage","React","Component","Header","activeStyle","color","exact","dispatcher","Dispatcher","_courses","store","callback","this","on","removeListener","emit","slug","find","course","EventEmitter","register","action","actionType","actionTypes","filter","id","parseInt","emitChange","push","map","courses","CourseList","props","key","onClick","deleteCourse","title","authorId","category","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","baseUrl","process","REACT_APP_API_URL","saveCourse","fetch","method","headers","body","JSON","stringify","then","catch","courseApi","savedCourse","dispatch","loadCourses","courseId","CoursesPage","useState","courseStore","getCourses","setCourses","onChange","useEffect","addChangeListener","length","removeChangeListener","NotFoundPage","TextInput","wrapperClass","htmlFor","label","type","name","value","defaultProps","CourseForm","onSubmit","errors","ManageCoursePage","setErrors","setCourse","match","params","courseActions","getCourseBySlug","target","event","preventDefault","_errors","Object","keys","formIsValid","history","toast","success","App","autoClose","hideProgressBar","path","component","from","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc0e4e41.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction HomePage() {\n  return (\n    <div className=\"jumbotron\">\n      <h1>Pluralsight Administration</h1>\n      <p>React, Flux, and React Router for ultra-responsive web apps.</p>\n      <Link to=\"about\" className=\"btn btn-primary\">\n        About\n      </Link>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\n\nclass AboutPage extends React.Component {\n  render() {\n    return (\n      <>\n        <h2>About</h2>\n        <p>This app uses React.</p>\n      </>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header() {\n  const activeStyle = { color: \"orange\" };\n  return (\n    <nav>\n      <NavLink activeStyle={activeStyle} exact to=\"/\">\n        Home\n      </NavLink>\n      {\" | \"}\n      <NavLink activeStyle={activeStyle} to=\"/courses\">\n        Courses\n      </NavLink>\n      {\" | \"}\n      <NavLink activeStyle={activeStyle} to=\"/about\">\n        About\n      </NavLink>\n    </nav>\n  );\n}\n\nexport default Header;\n","import { Dispatcher } from \"flux\";\nconst dispatcher = new Dispatcher();\nexport default dispatcher;\n","export default {\n  CREATE_COURSE: \"CREATE_COURSE\",\n  UPDATE_COURSE: \"UPDATE_COURSE\",\n  DELETE_COURSE: \"DELETE_COURSE\",\n  LOAD_COURSES: \"LOAD_COURSES\"\n};\n","import { EventEmitter } from \"events\";\nimport Dispatcher from \"../appDispatcher\";\nimport actionTypes from \"../actions/actionTypes\";\n\nconst CHANGE_EVENT = \"change\";\nlet _courses = [];\n\nclass CourseStore extends EventEmitter {\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n\n  getCourses() {\n    return _courses;\n  }\n\n  getCourseBySlug(slug) {\n    return _courses.find(course => course.slug === slug);\n  }\n}\n\nconst store = new CourseStore();\n\nDispatcher.register(action => {\n  switch (action.actionType) {\n    case actionTypes.DELETE_COURSE:\n      _courses = _courses.filter(\n        course => course.id !== parseInt(action.id, 10)\n      );\n      store.emitChange();\n      break;\n    case actionTypes.CREATE_COURSE:\n      _courses.push(action.course);\n      store.emitChange();\n      break;\n    case actionTypes.UPDATE_COURSE:\n      _courses = _courses.map(course =>\n        course.id === action.course.id ? action.course : course\n      );\n      store.emitChange();\n      break;\n    case actionTypes.LOAD_COURSES:\n      _courses = action.courses;\n      store.emitChange();\n      break;\n    default:\n    // nothing to do here\n  }\n});\n\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction CourseList(props) {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>&nbsp;</th>\n          <th>Title</th>\n          <th>Author ID</th>\n          <th>Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.courses.map(course => {\n          return (\n            <tr key={course.id}>\n              <td>\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => {\n                    props.deleteCourse(course.id);\n                  }}\n                >\n                  Delete\n                </button>\n              </td>\n              <td>\n                <Link to={\"/course/\" + course.slug}>{course.title}</Link>\n              </td>\n              <td>{course.authorId}</td>\n              <td>{course.category}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nCourseList.propTypes = {\n  deleteCourse: PropTypes.func.isRequired,\n  courses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      authorId: PropTypes.number.isRequired,\n      category: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default CourseList;\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\";\n\nexport function getCourses() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function getCourseBySlug(slug) {\n  return fetch(baseUrl + \"?slug=\" + slug)\n    .then(response => {\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\n      return response.json().then(courses => {\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\n        return courses[0]; // should only find one course for a given slug, so return it.\n      });\n    })\n    .catch(handleError);\n}\n\nexport function saveCourse(course) {\n  return fetch(baseUrl + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      ...course,\n      // Parse authorId to a number (in case it was sent as a string).\n      authorId: parseInt(course.authorId, 10)\n    })\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteCourse(courseId) {\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import dispatcher from \"../appDispatcher\";\nimport * as courseApi from \"../api/courseApi\";\nimport actionTypes from \"./actionTypes\";\n\nexport function saveCourse(course) {\n  return courseApi.saveCourse(course).then(savedCourse => {\n    // Hey dispatcher, go tell all the stores that a course was just created.\n    dispatcher.dispatch({\n      actionType: course.id\n        ? actionTypes.UPDATE_COURSE\n        : actionTypes.CREATE_COURSE,\n      course: savedCourse\n    });\n  });\n}\n\nexport function loadCourses() {\n  return courseApi.getCourses().then(courses => {\n    dispatcher.dispatch({\n      actionType: actionTypes.LOAD_COURSES,\n      courses: courses\n    });\n  });\n}\n\nexport function deleteCourse(id) {\n  return courseApi.deleteCourse(id).then(() => {\n    dispatcher.dispatch({\n      actionType: actionTypes.DELETE_COURSE,\n      id: id\n    });\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport courseStore from \"../stores/courseStore\";\nimport CourseList from \"./CourseList\";\nimport { Link } from \"react-router-dom\";\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\n\nfunction CoursesPage() {\n  const [courses, setCourses] = useState(courseStore.getCourses());\n\n  useEffect(() => {\n    courseStore.addChangeListener(onChange);\n    if (courses.length === 0) loadCourses();\n    return () => courseStore.removeChangeListener(onChange); // cleanup on unmount\n  }, [courses.length]);\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n  }\n\n  return (\n    <>\n      <h2>Courses</h2>\n      <Link className=\"btn btn-primary\" to=\"/course\">\n        Add Course\n      </Link>\n      <CourseList courses={courses} deleteCourse={deleteCourse} />\n    </>\n  );\n}\n\nexport default CoursesPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFoundPage() {\n  return (\n    <div>\n      <h2>Page Not Found</h2>\n      <p>\n        <Link to=\"/\">Back to Home</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction TextInput(props) {\n  let wrapperClass = \"form-group\";\n  if (props.error.length > 0) {\n    wrapperClass += \" has-error\";\n  }\n\n  return (\n    <div className={wrapperClass}>\n      <label htmlFor={props.id}>{props.label}</label>\n      <div className=\"field\">\n        <input\n          id={props.id}\n          type=\"text\"\n          onChange={props.onChange}\n          name={props.name}\n          className=\"form-control\"\n          value={props.value}\n        />\n      </div>\n      {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\n    </div>\n  );\n}\n\nTextInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  error: PropTypes.string\n};\n\nTextInput.defaultProps = {\n  error: \"\"\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport TextInput from \"./common/TextInput\";\nimport PropTypes from \"prop-types\";\n\nfunction CourseForm(props) {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <TextInput\n        id=\"title\"\n        label=\"Title\"\n        onChange={props.onChange}\n        name=\"title\"\n        value={props.course.title}\n        error={props.errors.title}\n      />\n\n      <div className=\"form-group\">\n        <label htmlFor=\"author\">Author</label>\n        <div className=\"field\">\n          <select\n            id=\"author\"\n            name=\"authorId\"\n            onChange={props.onChange}\n            value={props.course.authorId || \"\"}\n            className=\"form-control\"\n          >\n            <option value=\"\" />\n            <option value=\"1\">Cory House</option>\n            <option value=\"2\">Scott Allen</option>\n          </select>\n        </div>\n        {props.errors.authorId && (\n          <div className=\"alert alert-danger\">{props.errors.authorId}</div>\n        )}\n      </div>\n\n      <TextInput\n        id=\"category\"\n        label=\"Category\"\n        name=\"category\"\n        onChange={props.onChange}\n        value={props.course.category}\n        error={props.errors.category}\n      />\n\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n    </form>\n  );\n}\n\nCourseForm.propTypes = {\n  course: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nexport default CourseForm;\n","import React, { useState, useEffect } from \"react\";\nimport CourseForm from \"./CourseForm\";\nimport courseStore from \"../stores/courseStore\";\nimport { toast } from \"react-toastify\";\nimport * as courseActions from \"../actions/courseActions\";\n\nconst ManageCoursePage = props => {\n  const [errors, setErrors] = useState({});\n  const [courses, setCourses] = useState(courseStore.getCourses());\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\"\n  });\n\n  useEffect(() => {\n    courseStore.addChangeListener(onChange);\n    const slug = props.match.params.slug; // from the path `/courses/:slug`\n    if (courses.length === 0) {\n      courseActions.loadCourses();\n    } else if (slug) {\n      setCourse(courseStore.getCourseBySlug(slug));\n    }\n    return () => courseStore.removeChangeListener(onChange);\n  }, [courses.length, props.match.params.slug]);\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n  }\n\n  function handleChange({ target }) {\n    setCourse({\n      ...course,\n      [target.name]: target.value\n    });\n  }\n\n  function formIsValid() {\n    const _errors = {};\n\n    if (!course.title) _errors.title = \"Title is required\";\n    if (!course.authorId) _errors.authorId = \"Author ID is required\";\n    if (!course.category) _errors.category = \"Category is required\";\n\n    setErrors(_errors);\n    // Form is valid if the errors object has no properties\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    courseActions.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Course saved.\");\n    });\n  }\n\n  return (\n    <>\n      <h2>Manage Course</h2>\n      <CourseForm\n        errors={errors}\n        course={course}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n\nexport default ManageCoursePage;\n","import React from \"react\";\nimport HomePage from \"./HomePage\";\nimport AboutPage from \"./AboutPage\";\nimport Header from \"./common/Header\";\nimport CoursesPage from \"./CoursesPage\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport ManageCoursePage from \"./ManageCoursePage\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/courses\" component={CoursesPage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route path=\"/course/:slug\" component={ManageCoursePage} />\n        <Route path=\"/course\" component={ManageCoursePage} />\n        <Redirect from=\"/about-page\" to=\"about\" />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}